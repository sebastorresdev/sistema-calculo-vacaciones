@model Vacaciones.Frontend.Models.Departamento.CreateDepartamentoViewModel

@{
    ViewData["Title"] = "Crear Departamento";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 text-center">
            <h1 class="display-4 text-primary">@ViewData["Title"]</h1>
            <p class="lead text-muted">Ingresa la información para crear un nuevo departamento.</p>
        </div>
    </div>

    <!-- Formulario -->
    <div class="row justify-content-center mt-4">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm border-0 rounded-3">
                <div class="card-header bg-primary text-white text-center py-3">
                    <h4 class="mb-0">Formulario de Creación</h4>
                </div>
                <div class="card-body p-4">
                    <form asp-action="Create" method="post" class="needs-validation" novalidate>
                        <!-- Nombre -->
                        <div class="mb-4">
                            <label asp-for="Nombre" class="form-label fw-semibold">Nombre del Departamento</label>
                            <input asp-for="Nombre" class="form-control @((ViewData.ModelState["Nombre"]?.Errors.Count > 0) ? "is-invalid" : "")"
                                   placeholder="Ejemplo: Recursos Humanos" required />
                            <div class="invalid-feedback">
                                @Html.DisplayNameFor(model => model.Nombre) es obligatorio.
                            </div>
                        </div>

                        <!-- Botones -->
                        <div class="d-flex justify-content-between mt-4">
                            <button type="submit" class="btn btn-primary btn-lg fw-semibold">
                                <i class="bi bi-save me-2"></i>Guardar
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                                <i class="bi bi-arrow-left me-2"></i>Regresar
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Validación con Bootstrap
        (() => {
            'use strict'

            // Obtener todos los formularios que requieren validación
            const forms = document.querySelectorAll('.needs-validation')

            // Agregar un evento de validación personalizado
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}
